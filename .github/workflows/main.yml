name: CI/CD
on:
  push:
  pull_request:

jobs:
  tests:
    runs-on: ubuntu-latest
    container:
      image: python:latest

    steps:
      - uses: actions/checkout@v3
      - run: python -m pip install poetry
      - run: poetry install --with testing
      - run: poetry run pytest -m 'not browser' -v

  browser:
    strategy:
      matrix:
        browser: ['firefox', 'chromium', 'webkit']

    runs-on: ubuntu-latest
    container:
      image: python:latest

    steps:
      - uses: actions/checkout@v3
      - run: python -m pip install poetry
      - run: poetry install --with testing
      - run: poetry run playwright install --with-deps ${{ matrix.browser }}
      - run: poetry run pytest -m 'browser' --no-cov -v

      - name: 'Upload Artifacts'
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: artifacts
          path: artifacts/
          retention-days: 1

  linters:
    runs-on: ubuntu-latest
    container:
      image: python:latest

    steps:
      - uses: actions/checkout@v3
      - run: python -m pip install poetry
      - run: poetry install --with linters --without testing
      - run: poetry run mypy jeopardy/api
      - run: poetry run ruff jeopardy
      - run: poetry run black --check jeopardy
      - run: poetry run isort --check jeopardy

  coverage:
    runs-on: ubuntu-latest
    container:
      image: python:latest

    steps:
      - uses: actions/checkout@v3
      - run: python -m pip install poetry
      - run: poetry install --with testing
      - run: poetry run pytest -m 'not browser' -v

      - uses: cazier/actions/coverage@v1
        id: coverage
        with:
          coverage_file: coverage.out
          secret: ${{ secrets.CODECOV_TOKEN }}
